debug: true

branches:
  - master
  - refs/tags/*
  - nightly_ponyc

clone:
  tags: true

build:
  build_start:
    image: dipinhora/ponyc-builder:0.0.2
    commands:
      - 'echo "Build started at: `date`"'
      - date --date='-1 hour' '+%a %b %d %H:00:00 %Z %Y' > /drone/src/build-start
  arm_ponyc:
    image: dipinhora/ponyc-builder:0.0.2
    commands:
      - mkdir /drone/src/ponyc
      - cd /drone/src/ponyc
      - git clone https://github.com/ponylang/ponyc.git .
      - git branch
      - git reset --hard $(git log --before="$(cat /drone/src/build-start)" -n 1 | grep commit | awk '{print $2}')
      - git log -n 1
      - CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++ make arch=armv7-a bits=32 config=$$PONYC_CONFIG libponyrt
      - mv build/$$PONYC_CONFIG/libponyrt.a /drone/src/arm-libponyrt.a
      - cd /drone/src
      - rm -r /drone/src/ponyc
    when:
      matrix:
        PONYC_VERSION: armhf
  main_ponyc:
    image: dipinhora/ponyc-builder:0.0.2
    commands:
      - mkdir /drone/src/ponyc
      - cd /drone/src/ponyc
      - git clone https://github.com/ponylang/ponyc.git .
      - git branch
      - git reset --hard $(git log --before="$(cat /drone/src/build-start)" -n 1 | grep commit | awk '{print $2}')
      - git log -n 1
      - make config=$$PONYC_CONFIG test
  get_latest_buffy:
    image: dipinhora/ponyc-builder:0.0.2
    commands:
      - git fetch --tags --depth=50 origin +refs/heads/master
      - git checkout origin/master
      - git branch
      - git reset --hard $(git log --before="$(cat /drone/src/build-start)" -n 1 | grep commit | awk '{print $2}')
      - git log -n 1
  main_build:
    image: dipinhora/ponyc-runner:0.0.1
    commands:
      - oldpath=`pwd`
      - cd /drone/src/ponyc
      - LLVM_CONFIG=true make config=${PONYC_CONFIG} install
      - if [ -e /drone/src/arm-libponyrt.a ]; then cp /drone/src/arm-libponyrt.a /usr/local/lib/libponyrt.a; fi
      - cd $oldpath
      - make arch=$$PONYC_VERSION in_docker=true
  dagon_test_amd64:
    image: dipinhora/python-runner:0.0.1
    environment:
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
    commands:
      - make test
      - cd dagon && ./dagon.py --test double dagon
      - 'echo "Build completed at: `date`"'
    when:
      matrix:
        PONYC_VERSION: amd64
  dagon_test_armhf:
    image: dipinhora/arm-python-runner:0.0.1
    environment:
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
    commands:
      - make test
      - cd dagon && ./dagon.py --test double dagon
      - 'echo "Build completed at: `date`"'
    when:
      matrix:
        PONYC_VERSION: armhf

notify:
  slack:
    webhook_url: $$SLACK_WEBHOOK
    channel: b-drone-ci
    username: drone-ci
    template: >
      build `#{{ build.number }}` for `nightly` build of {{repo.clone_url}} 
      `master` against `ponylang/ponyc master` finished with a 
      `{{ build.status }}` status in {{ duration build.started_at build.finished_at }}

matrix:
  PONYC_CONFIG:
    - debug
    - release
  PONYC_VERSION:
    - armhf
    - amd64

